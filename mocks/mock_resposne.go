// Code generated by MockGen. DO NOT EDIT.
// Source: response.go

// Package mock_gox_app is a generated GoMock package.
package mock_gox_app

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gox_app "github.com/harishb2k/gox-app"
)

// MockResponse is a mock of Response interface.
type MockResponse struct {
	ctrl     *gomock.Controller
	recorder *MockResponseMockRecorder
}

// MockResponseMockRecorder is the mock recorder for MockResponse.
type MockResponseMockRecorder struct {
	mock *MockResponse
}

// NewMockResponse creates a new mock instance.
func NewMockResponse(ctrl *gomock.Controller) *MockResponse {
	mock := &MockResponse{ctrl: ctrl}
	mock.recorder = &MockResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponse) EXPECT() *MockResponseMockRecorder {
	return m.recorder
}

// Done mocks base method.
func (m *MockResponse) Done(data *gox_app.ResponseData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Done", data)
}

// Done indicates an expected call of Done.
func (mr *MockResponseMockRecorder) Done(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockResponse)(nil).Done), data)
}
